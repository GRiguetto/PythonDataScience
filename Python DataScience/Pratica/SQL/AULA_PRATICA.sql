--Aula 01-------------------------------------------------

-- CONHECENDO TABELA DE PAISES 

 SELECT * FROM PAIS

--CONHECENDO A TABELA DE ESTADOS

 SELECT * FROM ESTADOS WHERE COD_PAIS = 2

-- CONHECENDO A TABELA DE ALUNOS

 SELECT * FROM ALUNOS 

-- FILTRO DE TABELAS (WHERE)

 SELECT * FROM ALUNOS WHERE IDADE >= 30
 SELECT * FROM ALUNOS WHERE SEXO = 'M' AND IDADE >= 30
 SELECT * FROM ALUNOS WHERE SEXO = 'M' OR IDADE >= 30

 -- MOSTRE TODAS AS CIDADE DE MINAS GERAIS 

 SELECT * FROM CIDADES WHERE UF = 'MG'

 -- MOSTRE AS INFORMA�OES  MAS TRAGA SOMENTE AS SEGUINTES COLUNAS : CPF, NOME, IDADE
 --TRAZENDO COLUNA ESPECIFICAS
SELECT CPF, NOME, IDADE FROM ALUNOS 

SELECT NOME, IDADE FROM ALUNOS ORDER BY NOME -- ORDEM PADR�O 
SELECT NOME, IDADE FROM ALUNOS ORDER BY NOME DESC -- DECRECENTE

--MOSTRE TODOS OS CURSOS E TODAS SUAS COLUNAS MAS ORDEANDO POR NOME DO CURSO
SELECT * FROM CURSOS ORDER BY NOME

--Aula 02-------------------------------------------------------------------

SELECT * FROM CIDADES WHERE UF != 'SP' AND UF != 'RJ'

-- A MESMA CONSULTA ACIMA PORÉM USANDO OPERADOR BOOLEANO IN E NOT IN

SELECT * FROM CIDADES WHERE UF NOT IN ('SP', 'RJ', 'SC')
--NOT IN É QUE NÃO ESTA CONTIDO UM VALOR NA TABELA

-- MOSTRE UM RELATÓRIO ANALÍTICO COM AS SEGUINTES INFORMAÇÕES:
--CPF, NOME DO ALUNO, IDADE E CIDADE
-- EXEMPLO: 123123123123 |  JOAO SILVA | 40 | SÃO JOSE DO RIO PRETO

--USO DE IDENTAÇÃO --> SERVE PARA ORGANIZAR O CÓDIGO E DEIXÁ-LO MAIS LEGÍVEL

SELECT ALUNOS.CPF, ALUNOS.NOME, ALUNOS.IDADE, CIDADES.NOME
FROM ALUNOS 
INNER JOIN CIDADES ON CIDADES.COD_CIDADE = ALUNOS.COD_CIDADE

-- NOMEANDO (ATRIBUINDO APELIDOS) PARA AS COLUNAS

SELECT ALUNOS.CPF, ALUNOS.NOME AS ALUNO, ALUNOS.IDADE, CIDADES.NOME AS CIDADE
FROM ALUNOS 
INNER JOIN CIDADES ON CIDADES.COD_CIDADE = ALUNOS.COD_CIDADE
ORDER BY CIDADE, ALUNO

-- AS --  SERVE PARA RENOMEAR O NOME DO CAMPO NA TABELA

-- EXTRAIA DO BANCO DE DADOS AS SEGUINTES INFORMAÇÕES;
--NOME DO CURSO, NOME DA ÁREA DO CURSO E DURAÇÃO EM HORAS
--EX: JAVA | CIENCIAS EXATAS | 90

SELECT CURSOS.NOME AS 'Curso', AREA.NOME AS 'Area', CURSOS.HORAS AS 'DURACAO'
FROM CURSOS
INNER JOIN AREA ON AREA.COD_AREA = CURSOS.COD_AREA
ORDER BY Area, Curso

-- MOSTRE AS INFORMAÇÕES SOBRE ESTADOS
-- TRAGA AS SEGUINTES COLUNAS:
--NOME DO ESTADO,SIGLA DO ESTADO E NOME DO PAÍS
--EX: SÃO PAULO | SP | Brasil
--California | CA EUA

SELECT ESTADOS.NOME AS 'ESTADO', ESTADOS.UF, PAIS.NOME AS 'País'
FROM ESTADOS
INNER JOIN PAIS ON PAIS.COD_PAIS = ESTADOS.COD_PAIS
ORDER BY País, ESTADO

-- CRIE UM RELATÓRIO QUE MOSTRE TODOS OS ALUNOS MATRICULADOS
-- COLUNAS QUE SERÃO TRAZIDAS:
-- CPF NOME DO ALUNO, IDADE, CIDADE E CURSO QUE ESTA MATRICULADO

SELECT ALUNOS.CPF, ALUNOS.NOME, ALUNOS.IDADE, CIDADES.NOME, CURSOS.NOME
FROM ALUNOS
INNER JOIN CIDADES ON CIDADES.COD_CIDADE = ALUNOS.COD_CIDADE
INNER JOIN MATRICULA ON MATRICULA.CPF = ALUNOS.CPF
INNER JOIN CURSOS ON CURSOS.COD_CURSO = MATRICULA.COD_CURSO

-- AJUSTE A CONSULTA ACIMA PARA QUE TRAGA TODOS OS ALUNOS
-- AQUELES QUE NÃO ESTIVEREM MATRICULADOS, NOME DO CURSO DEVE TRAZER A SEGUINTE
--INFORMAÇÃO: 'NAO MATRICULADO'

SELECT ALUNOS.CPF, ALUNOS.NOME AS ALUNO, ALUNOS.IDADE,
-- FUNÇÃO UPPER() DEIXA TODAS AS LETRAS MAIÚSCULAS
--FUNÇÃO IFF() MONTA ESTRUTURA DE DECISÃO IF 
CIDADES.NOME AS CIDADE, UPPER(IIF(CURSOS.NOME IS NULL, 'NAO MATRICULADO', CURSOS.NOME)) AS CURSO 
FROM ALUNOS
INNER JOIN CIDADES ON CIDADES.COD_CIDADE = ALUNOS.COD_CIDADE
LEFT JOIN MATRICULA ON MATRICULA.CPF = ALUNOS.CPF
LEFT JOIN CURSOS ON CURSOS.COD_CURSO = MATRICULA.COD_CURSO
ORDER BY ALUNO

-- MOSTRE UMA CONSULTA QUE TRAGA TODAS OS PAÍSES QUE POSSUEM A LETRA 'C' EM SEUS NOMES
-- EXEMPLO: CANADÁ

SELECT * 
FROM PAIS 
WHERE PAIS.NOME LIKE  '%C%'
ORDER BY PAIS.NOME

-- MOSTRE TODOS OS ALUNOS QUE POSSUEM 'SILVA EM SEU NOME'

SELECT *
FROM ALUNOS
WHERE ALUNOS.NOME LIKE '%SILVA%'

--Aula 03-------------------------------------------------------------------

SELECT ALUNOS.CPF, ALUNOS.NOME AS ALUNO, ALUNOS.IDADE,CIDADES.NOME AS CIDADE, CURSOS.NOME AS CURSO
FROM CURSOS
INNER JOIN MATRICULA ON MATRICULA.COD_CURSO = CURSOS.COD_CURSO
INNER JOIN ALUNOS ON ALUNOS.CPF = MATRICULA.CPF
INNER JOIN CIDADES ON CIDADES.COD_CIDADE = ALUNOS.COD_CIDADE
ORDER BY CURSO, ALUNO

--AJUSTE A CONSULTA ACIMA PARA QUR TRAGA TODOS OS ALUNOS
--AQUELES QUE N�O ESTIVEREM MATRICULADOS M NO NOME DO CURSO DEVE TRAZER A SEGUINTE
--INFORMA��O: 'N�O MATRICULADO'X

SELECT ALUNOS.CPF, ALUNOS.NOME AS ALUNOS, ALUNOS.IDADE, CIDADES.NOME AS CIDADE,
       --FUN��O UPPER() DEIXA TODAS AS LETRAS DA PESQUISA MAIUSCULA
       --FUN��O IFF() MONTA ESTRUTURA DE DECIS�O
       UPPER(IIF(CURSOS.NOME IS NULL, 'NAO MATRICULADOS',CURSOS.NOME )) AS CURSO 
FROM ALUNOS
INNER JOIN CIDADES  ON CIDADES.COD_CIDADE = ALUNOS.COD_CIDADE
LEFT JOIN MATRICULA ON MATRICULA.CPF = ALUNOS.CPF
LEFT JOIN CURSOS    ON CURSOS.COD_CURSO=MATRICULA.COD_CURSO
ORDER BY ALUNOS

--MOSTRE UMA CONSULTA QUE TRAGA TODOS OS PAISES QUE POSSUEM A LETRA 'C' EM SEUS NOMES

SELECT * 
FROM PAIS 
WHERE PAIS.NOME LIKE '%C%'
ORDER BY PAIS.NOME


--MOSTRE TODOS OS ALUNO QUE POSUEM SILVA EM SEU NOME

SELECT *
FROM ALUNOS
WHERE ALUNOS.NOME LIKE '%SILVA%'
ORDER BY ALUNOS.NOME

--CRIE UMA CONSULTA QUE MOSTRE A QUATIDATE DE ALUNOS POR CURSO
SELECT CURSOS.NOME AS CURSO, COUNT(*) AS QTD_MATRICULAS
FROM CURSOS
INNER JOIN MATRICULA ON MATRICULA.COD_CURSO = CURSOS.COD_CURSO
GROUP BY CURSOS.NOME

--CRIE UMA CONSULTA QUE MOSTRE A QUANTIDADE DE ALUNOS POR CIDADE
SELECT CIDADES.NOME AS CIDADE, COUNT (*) AS QTD_ALUNOS
FROM ALUNOS
INNER JOIN CIDADES ON ALUNOS.COD_CIDADE = CIDADES.COD_CIDADE
GROUP BY CIDADES.NOME


--CRIE UMA CONSULTA QUE MOSTRE QUANTOS ALUNO TEM MATRICULADOS POR AREA DO CONHECIMANETO
SELECT AREA.NOME AS AREA, COUNT (*) AS QTD_ALUNOS
FROM MATRICULA
INNER JOIN CURSOS ON MATRICULA.COD_CURSO = CURSOS.COD_CURSO
INNER JOIN AREA ON CURSOS.COD_AREA = AREA.COD_AREA
GROUP BY AREA.NOME
ORDER BY QTD_ALUNOS DESC

--AULA 04 --------------------------------------------------------------------------------

--MOSTRE O FATURAMENTO MENSAL DA EMPRESA POR CIDADE

SELECT CIDADES.NOME AS CIDADE, SUM(MATRICULA.VALOR) AS FATURAMENTO
FROM MATRICULA
INNER JOIN ALUNOS  ON MATRICULA.CPF = ALUNOS.CPF
INNER JOIN CIDADES ON CIDADES.COD_CIDADE = ALUNOS.COD_CIDADE
GROUP BY CIDADES.NOME
UNION ALL -- COMANDO PARA UNIR, EM UMA MESMA VISÃO, DUAS CONSULTAS
SELECT 'TOTAL', SUM(MATRICULA.VALOR) AS FATURAMENTO
FROM MATRICULA

--CRIE UMA CONSULTA QUE MOSTRE O FATURAMENTO TOTAL POR ESTADO
SELECT ESTADOS.NOME AS ESTADO, SUM(MATRICULA.VALOR) AS FATURAMENTO
FROM MATRICULA
INNER JOIN ALUNOS  ON MATRICULA.CPF = ALUNOS.CPF
INNER JOIN CIDADES ON ALUNOS.COD_CIDADE = CIDADES.COD_CIDADE
INNER JOIN ESTADOS ON CIDADES.UF = ESTADOS.UF
GROUP BY ESTADOS.NOME
UNION ALL
SELECT 'TOTAL', SUM(MATRICULA.VALOR)AS FATURAMENTO
FROM MATRICULA


