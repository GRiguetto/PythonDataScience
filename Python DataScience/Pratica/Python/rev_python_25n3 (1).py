# -*- coding: utf-8 -*-
"""rev_python_25n3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BYGEM9lGOcZG-cQXvLKkxaUbMXLtEmgR
"""

print("hello world")

#25/09/2025
#revisão da linguagem python para análise de dados

#crie 3 varieave para que voce se apresente
#atribua valores na variaveis e os exiba na tela
#me chamo 'fulano, sou'função' e moro em 'cidade'

nome = "matheus"
profissão = "motorista reprovado"
cidade = "Rio Preto"

print ("Me chamo" , nome , "sou" , profissão, "e moro em" ,cidade)
#uso do format
print(f"Me chamo {nome} sou {profissão} e moro em {cidade}")

## crie um programa que receba a idade de uma pessoa emostre em tela se ela é maio ou menor de idade
idade = int

idade = int(input("Qual a sua idade?"))

if idade >= 18 :
    print(f"sua idade é {idade} voce é maior de idade")
else:
    print(f"sua idade é {idade} voce é menor de idade")

#crie um programa que receba dosi nome e duas alturas.
#mostre em tela a mais alta ou se possuem a mesma altura

nome1 = input("Digite o nome da 1º pessoa")
altura1 = float(input(f"digite a altura do(a) {nome1}"))

nome2 = input("Digite o nome da 2º pessoa")
altura2 = float(input(f"digite a altura do(a) {nome2}"))

if altura1 > altura2 :
    print(f"{nome1} é mais alta que {nome2}")
elif altura2 > altura1:
    print(f"{nome2} é mais alta que {nome1}")
else:
    print(f"{nome1} e {nome2} tem a mesma altura {altura1}")

#crie u programa que receba o salario e a idade de uma pessoa
# se a idade for maior ou igual a 50 e o salario menor que 3500 reajuste o salario em 7.5%
#senão reajuste em 5%
#mostre o salario reajustado e a diferença bruta de reajuste


idade = int (input("qual a sua idade"))
salario = float( input("qual o seu salario atual"))
#
if idade >= 50 and salario < 3500 :
    tx = 7.5
    salarioReajustado = salario * 1.075
else :
    tx = 5
    salarioReajustado = salario * 1.05
#
print(f"Novo salário: R${salarioReajustado} | Taxa de {tx}")
print(f"Diferença bruta : R${salarioReajustado - salario}")

#crie um programa que verifica se uma pessoa pode ou não doar sangue.
#sera digitada a idade e o peso da pessoa
#regra: somente pessoas com idade entre 16 e 69 anos e peso a partir de 50g
#podem doar

idade = int (input("qual a sua idade? "))
peso = float (input("qual seu peso? "))
#
if (idade < 16 or idade > 69 or peso <= 50) :
    print("voce não pode doar sangue")
else :
    print ("voce pode doar sangue")

#1 - crie um algoritimo que identifique se um numero é impar ou par

numero = int(input("digite um numero para saber se é par ou impar"))

if numero % 2:
    print("numero impar")
else:
    print("numero par")

# 2- crie um programa que receba a idade e o sakario de uma pessoa
#se a idade for maior ou igual a 50 e salario menor que 3.500,
#reajuste o salario em 7.5%
#se a idade for maior ou igual a 50 e salario maior ou igual a 3500
#reajuste de 5%
#senao reajuste em 3.5%

idade = int(input("digite sua idade: "))
salario = float (input("Digite seu salário: "))
if idade >= 50 and salario < 3500:
    tx = 7.5
elif idade > 50 and salario >= 3500:
    tx = 5.0
else:
    tx = 3.5

novo_salario = salario * (1+(tx/100))
bruto = novo_salario - salario
print(f"Seu salario foi ajustado em {tx}%: R${round(novo_salario , 2)}")
print(f"Diferença bruta: R${round(bruto,2)}")

#29/09/2025
#revisao: estruturas de repetição em python

# estrutura 'while'

cont = 1# variavel contadora
while cont <= 10  :
    print(f"lucimar Show de bola")
    # incrementando contador
    cont = cont +1

#faça o mesmo codigo acima mais mostrando o numero da repetição

cont = 1# variavel contadora
while cont <= 10  :
    print(f"repetição {cont} lucimar Show de bola")
    # incrementando contador
    cont = cont +1

# crie um programa que rece um nume e calcule a sua taboada
cont = 0
num = int (input("Digite um numero para saber a taboada dele"))
while cont <= 10 :
    print(f"{num} X {cont} = {num * cont}")
    cont += 1
print("\nFim de programa!")

#crie um progra que receba uma frase e quantas vezes o ussaurio gostaria de repetiala

cont = 1
frase = (input("Digite a frase que voce quer repetir"))
rep = int(input("digite a quantidade de vezes que voce quer repetir a frase"))

while cont <= rep :
    print(f"{cont} : {frase}")
    cont += 1

print("fim do programa")

#usando contagem regresiva

frase = (input("Digite a frase que voce quer repetir"))
rep = int(input("digite a quantidade de vezes que voce quer repetir a frase"))

while cont > 0 :
    print(f"{frase}")
    cont = cont - 1

print("fim do programa")

#crie um programa que receba um valor numerico
#o programa deve imprimir sia sequencia.. do 1 ao valor do numero
#porem somente os valres impares deverao ser impresso

num = int (input("digite um umero para descobrir a sequencia de impares"))
cont = 0

while cont <= num :
    if cont % 2 :
        print(cont, end=" ")
    cont += 1

#estrutura de repetição for
#crie um programa que exiba 100 numeros em tela, use o comando for

for numero in range (1, 101) :
    print (numero, end = " ")

#crie um programa que receba um nome e subistitua suas vogais pelo oque segue
# a - @
# e - 3
# i - 1
# o - 0
# u - v

nome = input("Digite uma nome: ")
#strip() --> remove espaços em brancos a esqquerda e a direita
#lower() --> Deixa todas as letras minusculas
nome = nome.strip().lower()
nome = nome.replace("a","@").replace("e","3").replace("i","1")\
    .replace("o", "0").replace("u","v")
for letra in nome :
    print(f"{letra.upper()}", end=" ")

#mostre na tela numeros sequencias do 1 ao 500 no entanto somente de 5 em 5

for numero in range (0, 501, 5):
    if  numero == 0:
        continue #comando contiune enterrme o lupe e o retorna para o inicio
    print (numero , end = " ")

#foguete

from time import sleep
cont = 10
foguete= input("qual o nome do seu foguete: ")
while cont > 0 :
    print(cont)
    sleep(1)
    cont -= 1
print(f"lancamento do foguete {foguete} iniciado")

for numero in range (1000,0,-1):
    print (numero, end=" " )

#30/09/2025 --> LISTAS , TUPLAS , MATRIZ, DICIONARIOS
#listas
carros = [ "ka" , "civic" , "marea" , "kwid" , "civic" , "corolla" , "corsa"]
print(carros)

print(len(carros))

for carro in carros :
    print (carro.capitalize())

#criação de uma matriz
carros = [
    ["mobi", "fiat", 2000, 70000],
    ["corolla", "toyota", 2024, 160000],
    ["911", "porsche", 2024 , 1000000],
    ["kwid", "renault", 2020 , 57000]
]
print(carros)

print(f"Quantidade de carros na lista: {len(carros)}")

#imprimindo valores na lista (matriz)
for e in carros:
    print (f"Modelo: {e[0].capitalize():8} | Marca: {e[1].capitalize():8} | Ano: {e[2]} | Preço: R${e[3]:,.2f}")

#crie um programa em python que faça o cadartro de itens em estoque
#o nome deve cadastrar: nome do produto, preço unitario e quantidade
#o cadatro sera iddefinido e sera encerrado qaundo o usuario digitar 'sair'
#ao final mostre em tela um relatorio com todos itens de estoque e taambem
#o valor total de cada um deles e o valor total do estoque

estoque = []#criando lista vazia

print(f"\n*** MÓDULO DE ESTOQUE ***\n")
while True : #loop infinito
    nome = input("\nDigite o nome do produto:")
    nome = nome.strip().upper()
    if nome == "SAIR" :
        break #comando break intenrrompe um loop
    else :
        preco = float(input(f"Digite o preço do {nome}: "))
        qtd = int(input(f"Digite a quantidade do {nome}: "))
        #apos receber informaçoes faremos a inclusão do elemento na lista
        estoque.append([nome, preco, qtd])
#fimdo loop
if estoque :
    print("\n** RELAÇOES DE ITENS EM ESTOQUE **")
    total = 0 #variavel acumuladora para somar o total do estoque
    for e in estoque :
        print(f"{e[0]:15} | Preço: R${e[1]:15,.2f} | Quantidade:  {e[2]:,.2f} | {e[1] * e[2]:,.2f}")
        total = total + e[1] * e[2]
    #fim do loop for
    print(f"\ntotal em estoque: R$ {total:,.2f}")
else:
    print("nenhum produto cadastrado")

#criando um dicionario manualmente

carros = {
    "kwid" : ["reault", 2024 , 72000],
    "civic" : ["honda", 2020, 125000],
    "renegade" : ["jeep", 2022, 85000],
    "corolla" : ["toyota", 2025, 165000]
}
carros

carros["kwid"]

carros["civic"]

chaves=(carros.keys())

chaves

valores = list(carros.values())

valores

#01/10/25
#refaça a atividade do cadastro de estoque porém usando um dicionario de dados

estoque = {}#criando dicionario vazio
print(f"\n*** MÓDULO DE ESTOQUE ***\n")
while True : #loop infinito
    nome = input("\nDigite o nome do produto:")
    nome = nome.strip().upper()
    if nome == "SAIR" :
        break #comando break intenrrompe um loop
    else :
        preco = float(input(f"Digite o preço do {nome}: "))
        qtd = int(input(f"Digite a quantidade do {nome}: "))
        #apos receber informaçoes faremos a inclusão do elemento na dicionario
        estoque [nome] = [preco, qtd]
        #estoque.update({nome:[preco, qtd]})
#fimdo loop
if estoque :
    print("\n** RELAÇOES DE ITENS EM ESTOQUE **")
    total = 0 #variavel acumuladora para somar o total do estoque
    for c,v in estoque.items():
        print(f"{c:15} | Preço: R${v[0]:15,.2f} | Quantidade:  {v[1]:,.2f} | {v[0] * v[1]:,.2f}")
        total = total + v[0] * v[1]
    #fim do loop for
    print(f"\ntotal em estoque: R$ {total:,.2f}")
else:
    print("nenhum produto cadastrado")

#dado o dicionario abaixo, exiba as seguintes informaçoes


funcionarios = {
    "alex": ["analista","ti",7500],
    "bruna": ["analista", "rh" , 4800],
    "pedro": ["coordenador", "projetos", 15000],
    "joao":["assistente" , "projeto", 3100]
}

#a) exiba o salario da bruna da seguinte forma
#bruna tem um salario de R$7,500.00
nomes = list(funcionarios.keys())
f = nomes[1]
v = funcionarios["bruna"]
print(f"{f} tem um salario de R${v[2]:,.2f}")

#correção professor
print(f"{nomes[1].capitalize()} tem o salario de R${funcionarios[nomes[1]][2]:,.2f}")

#b) exiba o cardo do joão da seguinte forma
#joão é assitente na empresa
nomes = list(funcionarios.keys())
f = nomes[3]
v = funcionarios["joao"]
print(f"{f} é {v[0]} na empresa")

#correção do professor
print(f"{nomes[-1].capitalize()} é {funcionarios[nomes[-1]][0]} na empresa")

#c) exiba a diferença entre o salario do pedro e do alex
#mostre da seguinte forma
#a diferença de salario entre Pedro e Alex é de R$ XXXX
nomes = list(funcionarios.keys())
nome1 = nomes[0]
nome2 = nomes[2]
funcionario1 = funcionarios["pedro"]
funcionario2 = funcionarios["alex"]

print(f"a diferença de salario entre {nome1} e {nome2} é de R${funcionario1[2] - funcionario2[2]}")

#correção do professor
print(f"A diferença de salario entre {nomes[-2].capitalize()} e {nomes[0].capitalize()} é de R${funcionarios[nomes[2]][2] - funcionarios[nomes[0]][2]:,.2f}")